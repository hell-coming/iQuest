.deploy:
  image: harbor.tomsk-it.ru/dockerhub/library/alpine:3.18.2
  variables:
    APP_DIRECTORY: "/home/${SSH_USER}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    SSH_OPT: "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
  before_script:
    - apk update
    - apk add openssh-client gettext sshpass
  script:
    - envsubst < .docker/docker-compose.yml.tpl > .docker/docker-compose.yml
    - mkdir .docker/tls
    - echo "${TLS_CRT}" > .docker/tls/crt.pem
    - echo "${TLS_KEY}" > .docker/tls/key.pem
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_OPT} ${SSH_USER}@${SSH_HOST} "mkdir -p ${APP_DIRECTORY}"
    - sshpass -p ${SSH_PASSWORD} scp ${SSH_OPT} -pr .docker/* ${SSH_USER}@${SSH_HOST}:${APP_DIRECTORY}/
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_OPT} ${SSH_USER}@${SSH_HOST} "echo ${CI_REGISTRY_PASSWORD} | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}"
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_OPT} ${SSH_USER}@${SSH_HOST} "docker compose -f ${APP_DIRECTORY}/docker-compose.yml pull"
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_OPT} ${SSH_USER}@${SSH_HOST} "docker compose -f ${APP_DIRECTORY}/docker-compose.yml up -d --force-recreate"


deploy-dev:
  extends:
    - .deploy
    - .from_dev
  variables:
    CI_COMMIT_TAG: ${CI_COMMIT_SHORT_SHA}
  environment:
    name: dev
    url: https://asap-template-dev.tomsk-it.ru


deploy-prod:
  extends:
    - .deploy
    - .from_prod
  environment:
    name: prod
    url: https://asap-template-prod.tomsk-it.ru
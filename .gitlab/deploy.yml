.deploy:
  image: harbor.tomsk-it.ru/dockerhub/library/alpine:3.18.2
  variables:
    APP_DIRECTORY: "/var/server/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    TLS_CRT: ${TOMSK_IT_WILD_CRT}
    TLS_KEY: ${TOMSK_IT_WILD_KEY}
  before_script:
    - apk update
    - apk add openssh-client gettext sshpass
  script:
    - envsubst < .docker/.env.template > .docker/.env
    - mkdir .docker/tls
    - echo ${TLS_CRT} > .docker/tls/crt.pem
    - echo ${TLS_KEY} > .docker/tls/key.pem
    - sshpass -p ${SSH_PASSWORD} scp -pr .docker ${SSH_USER}@${SSH_HOST}:${APP_DIRECTORY}
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_USER}@${SSH_HOST} "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}"
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_USER}@${SSH_HOST} "docker-compose -f ${APP_DIRECTORY}/docker-compose.yml pull"
    - sshpass -p ${SSH_PASSWORD} ssh ${SSH_USER}@${SSH_HOST} "docker-compose - f ${APP_DIRECTORY}/docker-compose.yml up -d --force-recreate"


deploy-dev:
  extends:
    - .deploy
    - .from_dev
  variables:
    CI_COMMIT_TAG: ${CI_COMMIT_SHORT_SHA}


deploy-prod:
  extends:
    - .deploy
    - .from_prod